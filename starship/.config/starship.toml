format = """
[](#9A348E)\
$hostname\
[](bg:#DA627D fg:#9A348E)\
$directory\
[](fg:#DA627D bg:#FCA17D)\
$git_branch\
$git_status\
${custom.svn_localrev}\
${custom.svn_status}\
[](fg:#FCA17D bg:#2CDA9D)\
${custom.local_changes}\
[](fg:#2CDA9D bg:#86BBD8)\
$c\
$elixir\
$elm\
$golang\
$haskell\
$java\
$julia\
$nodejs\
$nim\
$rust\
[](fg:#86BBD8 bg:#06969A)\
$docker_context\
[](fg:#06969A bg:#33658A)\
$time\
[ ](fg:#33658A)\
"""

# Disable the blank line at the start of the prompt
# add_newline = false

# You can also replace your username with a neat symbol like  to save some space
[username]
show_always = true
style_user = "bg:#9A348E"
style_root = "bg:#9A348E"
format = '[$user ]($style)'

[hostname]
style = "bg:#9A348E"
ssh_only = false
format = '[$hostname]($style)'
disabled = false

[directory]
style = "bg:#DA627D"
format = "[ $path ]($style)"
truncation_length = 3
truncation_symbol = "…/"

# Here is how you can shorten some long paths by text replacement
# similar to mapped_locations in Oh My Posh:
[directory.substitutions]
"Buildroot_emeraldpe_decoder/buildroot" = "PE_RX"
"Buildroot_emeraldpe_encoder/buildroot" = "PE_TX"
"Buildroot_emerald2k_decoder/buildroot" = "2K_RX"
"Buildroot_emerald2k_encoder/buildroot" = "2K_TX"
"Buildroot_emerald_decoder/buildroot" = "4K_RX"
"Buildroot_emerald_encoder/buildroot" = "4K_TX"
"Documents" = " "
"Downloads" = " "
"Music" = " "
"Pictures" = " "
"Emerald_sources/branches/" = ""
# Keep in mind that the order matters. For example:
# "Important Documents" = "  "
# will not be replaced, because "Documents" was already substituted before.
# So either put "Important Documents" before "Documents" or use the substituted version:
# "Important  " = "  "

[custom.local_changes]
description = "Flags if the local.mk file has any changes"
symbol = "local.mk!"
when = "if [[ -n $(tail local.mk -n+4 | awk '!/#/ {print}') ]]; then exit 0; else exit 1; fi"
style = "bg:#2CDA9D"
format = '[$symbol]($style)'

[custom.svn_localrev]
description = "Show SVN last-changed-revision for the current working directory"
when = "svn --non-interactive info >/dev/null 2>&1"
command = "svn --non-interactive info --no-newline --show-item last-changed-revision"
symbol = "r"
style = "bg:#FCA17D"
format = '[[ $symbol$output](bg:#FCA17D)]($style)'
# format = '[$symbol$output]($style)'
 
[custom.svn_status]
description = "Show a summary of SVN status flags for the current working directory when visiting a WC"
when = "svn --non-interactive info >/dev/null 2>&1"
command = "~/.local/scripts/starship-svn.sh"
symbol = ""
style = "bg:#FCA17D"
format = '[[ $symbol$output](bg:#FCA17D)]($style)'

[c]
symbol = " "
style = "bg:#86BBD8"
format = '[[ $symbol ($version) ](bg:#86BBD8)]($style)'

[docker_context]
symbol = " "
style = "bg:#06969A"
format = '[[ $symbol $context ](bg:#06969A)]($style) $path'

[elixir]
symbol = " "
style = "bg:#86BBD8"
format = '[[ $symbol ($version) ](bg:#86BBD8)]($style)'

[elm]
symbol = " "
style = "bg:#86BBD8"
format = '[[ $symbol ($version) ](bg:#86BBD8)]($style)'

[git_branch]
symbol = ""
style = "bg:#FCA17D"
format = '[[ $symbol $branch ](bg:#FCA17D)]($style)'

[git_status]
style = "bg:#FCA17D"
format = '[[($all_status$ahead_behind )](bg:#FCA17D)]($style)'

[golang]
symbol = " "
style = "bg:#86BBD8"
format = '[[ $symbol ($version) ](bg:#86BBD8)]($style)'

[haskell]
symbol = " "
style = "bg:#86BBD8"
format = '[[ $symbol ($version) ](bg:#86BBD8)]($style)'

[java]
symbol = " "
style = "bg:#86BBD8"
format = '[[ $symbol ($version) ](bg:#86BBD8)]($style)'

[julia]
symbol = " "
style = "bg:#86BBD8"
format = '[[ $symbol ($version) ](bg:#86BBD8)]($style)'

[nodejs]
symbol = ""
style = "bg:#86BBD8"
format = '[[ $symbol ($version) ](bg:#86BBD8)]($style)'

[nim]
symbol = " "
style = "bg:#86BBD8"
format = '[[ $symbol ($version) ](bg:#86BBD8)]($style)'

[rust]
symbol = ""
style = "bg:#86BBD8"
format = '[[ $symbol ($version) ](bg:#86BBD8)]($style)'

[time]
disabled = false
time_format = "%R" # Hour:Minute Format
style = "bg:#33658A"
format = '[[ ♥ $time ](bg:#33658A)]($style)'

[cmd_duration]
min_time = 500
format = "took [$duration](bold $style)"
